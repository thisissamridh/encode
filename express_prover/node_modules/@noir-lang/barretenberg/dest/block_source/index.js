"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Block = void 0;
const tslib_1 = require("tslib");
const serialize_1 = require("../serialize");
const blockchain_1 = require("../blockchain");
const defi_interaction_event_1 = require("./defi_interaction_event");
class Block {
    constructor(txHash, created, rollupId, rollupSize, encodedRollupProofData, offchainTxData, interactionResult, gasUsed, gasPrice, subtreeRoot) {
        this.txHash = txHash;
        this.created = created;
        this.rollupId = rollupId;
        this.rollupSize = rollupSize;
        this.encodedRollupProofData = encodedRollupProofData;
        this.offchainTxData = offchainTxData;
        this.interactionResult = interactionResult;
        this.gasUsed = gasUsed;
        this.gasPrice = gasPrice;
        this.subtreeRoot = subtreeRoot;
    }
    static deserialize(buf, offset = 0) {
        const des = new serialize_1.Deserializer(buf, offset);
        const txHash = des.exec(blockchain_1.TxHash.deserialize);
        const created = des.date();
        const rollupId = des.uInt32();
        const rollupSize = des.uInt32();
        const rollupProofData = des.vector();
        const offchainTxData = des.deserializeArray(serialize_1.deserializeBufferFromVector);
        const interactionResult = des.deserializeArray(defi_interaction_event_1.DefiInteractionEvent.deserialize);
        const gasUsed = des.uInt32();
        const gasPrice = des.bigInt();
        const subtreeRoot = des.vector();
        return {
            elem: new Block(txHash, created, rollupId, rollupSize, rollupProofData, offchainTxData, interactionResult, gasUsed, gasPrice, subtreeRoot.equals(Buffer.alloc(0)) ? undefined : subtreeRoot),
            adv: des.getOffset() - offset,
        };
    }
    static fromBuffer(buf) {
        return Block.deserialize(buf).elem;
    }
    toBuffer() {
        var _a;
        return Buffer.concat([
            this.txHash.toBuffer(),
            (0, serialize_1.serializeDate)(this.created),
            (0, serialize_1.numToUInt32BE)(this.rollupId),
            (0, serialize_1.numToUInt32BE)(this.rollupSize),
            (0, serialize_1.serializeBufferToVector)(this.encodedRollupProofData),
            (0, serialize_1.serializeBufferArrayToVector)(this.offchainTxData.map(b => (0, serialize_1.serializeBufferToVector)(b))),
            (0, serialize_1.serializeBufferArrayToVector)(this.interactionResult.map(b => b.toBuffer())),
            (0, serialize_1.numToUInt32BE)(this.gasUsed),
            (0, serialize_1.serializeBigInt)(this.gasPrice),
            (0, serialize_1.serializeBufferToVector)((_a = this.subtreeRoot) !== null && _a !== void 0 ? _a : Buffer.alloc(0)),
        ]);
    }
}
exports.Block = Block;
(0, tslib_1.__exportStar)(require("./server_block_source"), exports);
(0, tslib_1.__exportStar)(require("./defi_interaction_event"), exports);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYmxvY2tfc291cmNlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSw0Q0FRc0I7QUFDdEIsOENBQXVDO0FBQ3ZDLHFFQUFnRTtBQUdoRSxNQUFhLEtBQUs7SUFDaEIsWUFDUyxNQUFjLEVBQ2QsT0FBYSxFQUNiLFFBQWdCLEVBQ2hCLFVBQWtCLEVBQ2xCLHNCQUE4QixFQUM5QixjQUF3QixFQUN4QixpQkFBeUMsRUFDekMsT0FBZSxFQUNmLFFBQWdCLEVBQ2hCLFdBQW9CO1FBVHBCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxZQUFPLEdBQVAsT0FBTyxDQUFNO1FBQ2IsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUNoQixlQUFVLEdBQVYsVUFBVSxDQUFRO1FBQ2xCLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBUTtRQUM5QixtQkFBYyxHQUFkLGNBQWMsQ0FBVTtRQUN4QixzQkFBaUIsR0FBakIsaUJBQWlCLENBQXdCO1FBQ3pDLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFDZixhQUFRLEdBQVIsUUFBUSxDQUFRO1FBQ2hCLGdCQUFXLEdBQVgsV0FBVyxDQUFTO0lBQzFCLENBQUM7SUFFSixNQUFNLENBQUMsV0FBVyxDQUFDLEdBQVcsRUFBRSxNQUFNLEdBQUcsQ0FBQztRQUN4QyxNQUFNLEdBQUcsR0FBRyxJQUFJLHdCQUFZLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzFDLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM1QyxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDM0IsTUFBTSxRQUFRLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzlCLE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNoQyxNQUFNLGVBQWUsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDckMsTUFBTSxjQUFjLEdBQUcsR0FBRyxDQUFDLGdCQUFnQixDQUFDLHVDQUEyQixDQUFDLENBQUM7UUFDekUsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsNkNBQW9CLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDakYsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzdCLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM5QixNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDakMsT0FBTztZQUNMLElBQUksRUFBRSxJQUFJLEtBQUssQ0FDYixNQUFNLEVBQ04sT0FBTyxFQUNQLFFBQVEsRUFDUixVQUFVLEVBQ1YsZUFBZSxFQUNmLGNBQWMsRUFDZCxpQkFBaUIsRUFDakIsT0FBTyxFQUNQLFFBQVEsRUFDUixXQUFXLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQzlEO1lBQ0QsR0FBRyxFQUFFLEdBQUcsQ0FBQyxTQUFTLEVBQUUsR0FBRyxNQUFNO1NBQzlCLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFXO1FBQzNCLE9BQU8sS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDckMsQ0FBQztJQUVELFFBQVE7O1FBQ04sT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ25CLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFO1lBQ3RCLElBQUEseUJBQWEsRUFBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQzNCLElBQUEseUJBQWEsRUFBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQzVCLElBQUEseUJBQWEsRUFBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBQzlCLElBQUEsbUNBQXVCLEVBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDO1lBQ3BELElBQUEsd0NBQTRCLEVBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFBLG1DQUF1QixFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEYsSUFBQSx3Q0FBNEIsRUFBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDM0UsSUFBQSx5QkFBYSxFQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDM0IsSUFBQSwyQkFBZSxFQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDOUIsSUFBQSxtQ0FBdUIsRUFBQyxNQUFBLElBQUksQ0FBQyxXQUFXLG1DQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDN0QsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBN0RELHNCQTZEQztBQXlCRCxxRUFBc0M7QUFDdEMsd0VBQXlDIn0=