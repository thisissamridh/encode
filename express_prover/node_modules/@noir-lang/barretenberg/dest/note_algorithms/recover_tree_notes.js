"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.recoverTreeNotes = void 0;
const address_1 = require("../address");
const log_1 = require("../log");
const grumpkin_1 = require("../ecc/grumpkin");
const tree_note_1 = require("./tree_note");
const debug = (0, log_1.createDebugLogger)('recover_tree_notes');
const recoverTreeNotes = (decryptedNotes, inputNullifiers, noteCommitments, privateKey, grumpkin, noteAlgorithms) => {
    const ownerPubKey = new address_1.GrumpkinAddress(grumpkin.mul(grumpkin_1.Grumpkin.one, privateKey));
    return decryptedNotes.map((decrypted, i) => {
        if (!decrypted) {
            debug(`index ${i}: no decrypted tree note.`);
            return;
        }
        const noteCommitment = noteCommitments[i];
        const inputNullifier = inputNullifiers[i];
        const note = tree_note_1.TreeNote.recover(decrypted, inputNullifier, ownerPubKey);
        debug({ note });
        const commitment = noteAlgorithms.valueNoteCommitment(note);
        if (commitment.equals(noteCommitment)) {
            debug(`index ${i}: tree commitment ${noteCommitment.toString('hex')} matches note version 1.`);
            return note;
        }
        debug(`index ${i}: tree commitment ${noteCommitment.toString('hex')} != encrypted note commitment ${commitment.toString('hex')}.`);
    });
};
exports.recoverTreeNotes = recoverTreeNotes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjb3Zlcl90cmVlX25vdGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL25vdGVfYWxnb3JpdGhtcy9yZWNvdmVyX3RyZWVfbm90ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsd0NBQTZDO0FBQzdDLGdDQUEyQztBQUMzQyw4Q0FBMkM7QUFHM0MsMkNBQXVDO0FBRXZDLE1BQU0sS0FBSyxHQUFHLElBQUEsdUJBQWlCLEVBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUUvQyxNQUFNLGdCQUFnQixHQUFHLENBQzlCLGNBQTZDLEVBQzdDLGVBQXlCLEVBQ3pCLGVBQXlCLEVBQ3pCLFVBQWtCLEVBQ2xCLFFBQWtCLEVBQ2xCLGNBQThCLEVBQzlCLEVBQUU7SUFDRixNQUFNLFdBQVcsR0FBRyxJQUFJLHlCQUFlLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxtQkFBUSxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ2hGLE9BQU8sY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN6QyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2QsS0FBSyxDQUFDLFNBQVMsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1lBQzdDLE9BQU87U0FDUjtRQUVELE1BQU0sY0FBYyxHQUFHLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQyxNQUFNLGNBQWMsR0FBRyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFMUMsTUFBTSxJQUFJLEdBQUcsb0JBQVEsQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLGNBQWMsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUN0RSxLQUFLLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ2hCLE1BQU0sVUFBVSxHQUFHLGNBQWMsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1RCxJQUFJLFVBQVUsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEVBQUU7WUFDckMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxxQkFBcUIsY0FBYyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUMvRixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsS0FBSyxDQUNILFNBQVMsQ0FBQyxxQkFBcUIsY0FBYyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsaUNBQWlDLFVBQVUsQ0FBQyxRQUFRLENBQy9HLEtBQUssQ0FDTixHQUFHLENBQ0wsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBL0JXLFFBQUEsZ0JBQWdCLG9CQStCM0IifQ==