{"id":"qolJ","dependencies":[{"name":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/package.json","includedInParent":true,"mtime":1663951495938},{"name":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/package.json","includedInParent":true,"mtime":1663107578820},{"name":"is-observable","loc":{"line":10,"column":29},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/worker/index.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/is-observable/index.js"},{"name":"../common","loc":{"line":15,"column":35},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/worker/index.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/common.js"},{"name":"../transferable","loc":{"line":16,"column":25},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/worker/index.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/transferable.js"},{"name":"../types/messages","loc":{"line":13,"column":53},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/worker/index.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/types/messages.js"},{"name":"./implementation","loc":{"line":14,"column":27},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/worker/index.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/worker/implementation.browser.js"},{"name":"process","parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/threads/dist-esm/worker/index.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar e=require(\"process\");Object.defineProperty(exports,\"__esModule\",{value:!0}),Object.defineProperty(exports,\"Transfer\",{enumerable:!0,get:function(){return s.Transfer}}),exports.expose=k,exports.isWorkerRuntime=void 0,Object.defineProperty(exports,\"registerSerializer\",{enumerable:!0,get:function(){return r.registerSerializer}});var t=a(require(\"is-observable\")),r=require(\"../common\"),s=require(\"../transferable\"),o=require(\"../types/messages\"),n=a(require(\"./implementation\"));function a(e){return e&&e.__esModule?e:{default:e}}var i=function(e,t,r,s){return new(r||(r=Promise))(function(o,n){function a(e){try{u(s.next(e))}catch(t){n(t)}}function i(e){try{u(s.throw(e))}catch(t){n(t)}}function u(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r(function(e){e(t)})).then(a,i)}u((s=s.apply(e,t||[])).next())})};const u=n.default.isWorkerRuntime;exports.isWorkerRuntime=u;let c=!1;const f=new Map,l=e=>e&&e.type===o.MasterMessageType.cancel,p=e=>e&&e.type===o.MasterMessageType.run,d=e=>(0,t.default)(e)||y(e);function y(e){return e&&\"object\"==typeof e&&\"function\"==typeof e.subscribe}function g(e){return(0,s.isTransferDescriptor)(e)?{payload:e.send,transferables:e.transferables}:{payload:e,transferables:void 0}}function b(){const e={type:o.WorkerMessageType.init,exposed:{type:\"function\"}};n.default.postMessageToMaster(e)}function m(e){const t={type:o.WorkerMessageType.init,exposed:{type:\"module\",methods:e}};n.default.postMessageToMaster(t)}function M(e,t){const{payload:s,transferables:a}=g(t),i={type:o.WorkerMessageType.error,uid:e,error:(0,r.serialize)(s)};n.default.postMessageToMaster(i,a)}function h(e,t,r){const{payload:s,transferables:a}=g(r),i={type:o.WorkerMessageType.result,uid:e,complete:!!t||void 0,payload:s};n.default.postMessageToMaster(i,a)}function T(e,t){const r={type:o.WorkerMessageType.running,uid:e,resultType:t};n.default.postMessageToMaster(r)}function v(e){try{const s={type:o.WorkerMessageType.uncaughtError,error:(0,r.serialize)(e)};n.default.postMessageToMaster(s)}catch(t){console.error(\"Not reporting uncaught error back to master thread as it occured while reporting an uncaught error already.\\nLatest error:\",t,\"\\nOriginal error:\",e)}}function x(e,t,s){return i(this,void 0,void 0,function*(){let o;try{o=t(...s)}catch(a){return M(e,a)}const n=d(o)?\"observable\":\"promise\";if(T(e,n),d(o)){const t=o.subscribe(t=>h(e,!1,(0,r.serialize)(t)),t=>{M(e,(0,r.serialize)(t)),f.delete(e)},()=>{h(e,!0),f.delete(e)});f.set(e,t)}else try{const t=yield o;h(e,!0,(0,r.serialize)(t))}catch(a){M(e,(0,r.serialize)(a))}})}function k(e){if(!n.default.isWorkerRuntime())throw Error(\"expose() called in the master thread.\");if(c)throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");if(c=!0,\"function\"==typeof e)n.default.subscribeToMasterMessages(t=>{p(t)&&!t.method&&x(t.uid,e,t.args.map(r.deserialize))}),b();else{if(\"object\"!=typeof e||!e)throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${e}`);n.default.subscribeToMasterMessages(t=>{p(t)&&t.method&&x(t.uid,e[t.method],t.args.map(r.deserialize))}),m(Object.keys(e).filter(t=>\"function\"==typeof e[t]))}n.default.subscribeToMasterMessages(e=>{if(l(e)){const t=e.uid,r=f.get(t);r&&(r.unsubscribe(),f.delete(t))}})}\"undefined\"!=typeof self&&\"function\"==typeof self.addEventListener&&n.default.isWorkerRuntime()&&(self.addEventListener(\"error\",e=>{setTimeout(()=>v(e.error||e),250)}),self.addEventListener(\"unhandledrejection\",e=>{const t=e.reason;t&&\"string\"==typeof t.message&&setTimeout(()=>v(t),250)})),void 0!==e&&\"function\"==typeof e.on&&n.default.isWorkerRuntime()&&(e.on(\"uncaughtException\",e=>{setTimeout(()=>v(e),250)}),e.on(\"unhandledRejection\",e=>{e&&\"string\"==typeof e.message&&setTimeout(()=>v(e),250)}));"},"sourceMaps":null,"error":null,"hash":"fc4cfaca495ded8cdd6b88658736e759","cacheData":{"env":{}}}