{"id":"HCUw","dependencies":[{"name":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/package.json","includedInParent":true,"mtime":1663951495938},{"name":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/asn1.js/package.json","includedInParent":true,"mtime":1663107590205},{"name":"inherits","loc":{"line":3,"column":25},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/asn1.js/lib/asn1/encoders/der.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/inherits/inherits_browser.js"},{"name":"safer-buffer","loc":{"line":4,"column":23},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/asn1.js/lib/asn1/encoders/der.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/safer-buffer/safer.js"},{"name":"../base/node","loc":{"line":5,"column":21},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/asn1.js/lib/asn1/encoders/der.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/asn1.js/lib/asn1/base/node.js"},{"name":"../constants/der","loc":{"line":8,"column":20},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/asn1.js/lib/asn1/encoders/der.js","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/asn1.js/lib/asn1/constants/der.js"}],"generated":{"js":"\n\"use strict\";const e=require(\"inherits\"),t=require(\"safer-buffer\").Buffer,r=require(\"../base/node\"),n=require(\"../constants/der\");function o(e){this.enc=\"der\",this.name=e.name,this.entity=e,this.tree=new i,this.tree._init(e.body)}function i(e){r.call(this,\"der\",e)}function s(e){return e<10?\"0\"+e:e}function f(e,t,r,o){let i;if(\"seqof\"===e?e=\"seq\":\"setof\"===e&&(e=\"set\"),n.tagByName.hasOwnProperty(e))i=n.tagByName[e];else{if(\"number\"!=typeof e||(0|e)!==e)return o.error(\"Unknown tag: \"+e);i=e}return i>=31?o.error(\"Multi-octet tag encoding unsupported\"):(t||(i|=32),i|=n.tagClassByName[r||\"universal\"]<<6)}module.exports=o,o.prototype.encode=function(e,t){return this.tree._encode(e,t).join()},e(i,r),i.prototype._encodeComposite=function(e,r,n,o){const i=f(e,r,n,this.reporter);if(o.length<128){const e=t.alloc(2);return e[0]=i,e[1]=o.length,this._createEncoderBuffer([e,o])}let s=1;for(let t=o.length;t>=256;t>>=8)s++;const u=t.alloc(2+s);u[0]=i,u[1]=128|s;for(let t=1+s,f=o.length;f>0;t--,f>>=8)u[t]=255&f;return this._createEncoderBuffer([u,o])},i.prototype._encodeStr=function(e,r){if(\"bitstr\"===r)return this._createEncoderBuffer([0|e.unused,e.data]);if(\"bmpstr\"===r){const r=t.alloc(2*e.length);for(let t=0;t<e.length;t++)r.writeUInt16BE(e.charCodeAt(t),2*t);return this._createEncoderBuffer(r)}return\"numstr\"===r?this._isNumstr(e)?this._createEncoderBuffer(e):this.reporter.error(\"Encoding of string type: numstr supports only digits and space\"):\"printstr\"===r?this._isPrintstr(e)?this._createEncoderBuffer(e):this.reporter.error(\"Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark\"):/str$/.test(r)?this._createEncoderBuffer(e):\"objDesc\"===r?this._createEncoderBuffer(e):this.reporter.error(\"Encoding of string type: \"+r+\" unsupported\")},i.prototype._encodeObjid=function(e,r,n){if(\"string\"==typeof e){if(!r)return this.reporter.error(\"string objid given, but no values map found\");if(!r.hasOwnProperty(e))return this.reporter.error(\"objid not found in values map\");e=r[e].split(/[\\s.]+/g);for(let t=0;t<e.length;t++)e[t]|=0}else if(Array.isArray(e)){e=e.slice();for(let t=0;t<e.length;t++)e[t]|=0}if(!Array.isArray(e))return this.reporter.error(\"objid() should be either array or string, got: \"+JSON.stringify(e));if(!n){if(e[1]>=40)return this.reporter.error(\"Second objid identifier OOB\");e.splice(0,2,40*e[0]+e[1])}let o=0;for(let t=0;t<e.length;t++){let r=e[t];for(o++;r>=128;r>>=7)o++}const i=t.alloc(o);let s=i.length-1;for(let t=e.length-1;t>=0;t--){let r=e[t];for(i[s--]=127&r;(r>>=7)>0;)i[s--]=128|127&r}return this._createEncoderBuffer(i)},i.prototype._encodeTime=function(e,t){let r;const n=new Date(e);return\"gentime\"===t?r=[s(n.getUTCFullYear()),s(n.getUTCMonth()+1),s(n.getUTCDate()),s(n.getUTCHours()),s(n.getUTCMinutes()),s(n.getUTCSeconds()),\"Z\"].join(\"\"):\"utctime\"===t?r=[s(n.getUTCFullYear()%100),s(n.getUTCMonth()+1),s(n.getUTCDate()),s(n.getUTCHours()),s(n.getUTCMinutes()),s(n.getUTCSeconds()),\"Z\"].join(\"\"):this.reporter.error(\"Encoding \"+t+\" time is not supported yet\"),this._encodeStr(r,\"octstr\")},i.prototype._encodeNull=function(){return this._createEncoderBuffer(\"\")},i.prototype._encodeInt=function(e,r){if(\"string\"==typeof e){if(!r)return this.reporter.error(\"String int or enum given, but no values map\");if(!r.hasOwnProperty(e))return this.reporter.error(\"Values map doesn't contain: \"+JSON.stringify(e));e=r[e]}if(\"number\"!=typeof e&&!t.isBuffer(e)){const r=e.toArray();!e.sign&&128&r[0]&&r.unshift(0),e=t.from(r)}if(t.isBuffer(e)){let r=e.length;0===e.length&&r++;const n=t.alloc(r);return e.copy(n),0===e.length&&(n[0]=0),this._createEncoderBuffer(n)}if(e<128)return this._createEncoderBuffer(e);if(e<256)return this._createEncoderBuffer([0,e]);let n=1;for(let t=e;t>=256;t>>=8)n++;const o=new Array(n);for(let t=o.length-1;t>=0;t--)o[t]=255&e,e>>=8;return 128&o[0]&&o.unshift(0),this._createEncoderBuffer(t.from(o))},i.prototype._encodeBool=function(e){return this._createEncoderBuffer(e?255:0)},i.prototype._use=function(e,t){return\"function\"==typeof e&&(e=e(t)),e._getEncoder(\"der\").tree},i.prototype._skipDefault=function(e,t,r){const n=this._baseState;let o;if(null===n.default)return!1;const i=e.join();if(void 0===n.defaultBuffer&&(n.defaultBuffer=this._encodeValue(n.default,t,r).join()),i.length!==n.defaultBuffer.length)return!1;for(o=0;o<i.length;o++)if(i[o]!==n.defaultBuffer[o])return!1;return!0};"},"sourceMaps":null,"error":null,"hash":"bc2e7e9ccb18779709d43a859736e492","cacheData":{"env":{}}}