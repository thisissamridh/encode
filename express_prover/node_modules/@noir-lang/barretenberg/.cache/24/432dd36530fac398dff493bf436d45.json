{"id":"rQF2","dependencies":[{"name":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/tsconfig.json","includedInParent":true,"mtime":1663687003068},{"name":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/package.json","includedInParent":true,"mtime":1663951495938},{"name":"../../serialize","loc":{"line":4,"column":28},"parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/src/crypto/pedersen/single_pedersen.ts","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/src/serialize/index.ts"},{"name":"buffer","parent":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/src/crypto/pedersen/single_pedersen.ts","resolved":"/mnt/user-data/kev/tmp/aztec-connect/barretenberg.js/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar e=require(\"buffer\").Buffer;Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.SinglePedersen=void 0;const r=require(\"../../serialize\");class s{constructor(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;this.wasm=e,this.worker=r}async init(){this.wasm.call(\"pedersen__init\"),await this.worker.call(\"pedersen__init\")}compress(r,s){return this.wasm.transferToHeap(r,0),this.wasm.transferToHeap(s,32),this.wasm.call(\"pedersen__compress_fields\",0,32,64),e.from(this.wasm.sliceMemory(64,96))}compressInputs(s){const a=(0,r.serializeBufferArrayToVector)(s);return this.wasm.transferToHeap(a,0),this.wasm.call(\"pedersen__compress\",0,0),e.from(this.wasm.sliceMemory(0,32))}compressWithHashIndex(s,a){const t=(0,r.serializeBufferArrayToVector)(s);return this.wasm.transferToHeap(t,0),this.wasm.call(\"pedersen__compress_with_hash_index\",0,0,a),e.from(this.wasm.sliceMemory(0,32))}hashToField(r){const s=this.wasm.call(\"bbmalloc\",r.length);return this.wasm.transferToHeap(r,s),this.wasm.call(\"pedersen__buffer_to_field\",s,r.length,0),this.wasm.call(\"bbfree\",s),e.from(this.wasm.sliceMemory(0,32))}async hashToTree(s){const a=(0,r.serializeBufferArrayToVector)(s),t=await this.worker.call(\"bbmalloc\",a.length);await this.worker.transferToHeap(a,t);const i=await this.worker.call(\"pedersen__hash_to_tree\",t),o=e.from(await this.worker.sliceMemory(i,i+4)).readUInt32BE(0),l=e.from(await this.worker.sliceMemory(i,i+4+32*o));return await this.worker.call(\"bbfree\",t),await this.worker.call(\"bbfree\",i),(0,r.deserializeArrayFromVector)(r.deserializeField,l).elem}}exports.SinglePedersen=s;"},"sourceMaps":null,"error":null,"hash":"ab95cb5a99e5b25f6f62fe47b0b50bc9","cacheData":{"env":{}}}